% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/library_similarity.R
\name{library_similarity}
\alias{library_similarity}
\title{Searching a query spectrum in a spectral library}
\usage{
library_similarity(
  query_spectrum,
  polarity = "Positive",
  prec_mz = 100,
  use.prec = FALSE,
  input_library = NULL,
  method = c("Matches", "Dot", "Cosine", "Spearman", "MassBank", "NIST"),
  prec_ppm_search = 10,
  frag_mz_search = 0.005,
  min_frag_match = 6
)
}
\arguments{
\item{query_spectrum}{Two-column data matrix. Two columns represent m/z and intensity of query tandem spectrum. At least 3 valid peaks should be provided}

\item{polarity}{A single character. Either "Positive" or "Negative". Ion mode of the query spectrum.}

\item{prec_mz}{Numeric. Precursor mass of query spectrum.}

\item{use.prec}{Boolean. If set to TRUE, precursor mass is used to "pre-query" the library}

\item{input_library}{A list generated by the function library_generator(), must contain "complete", "consensus" and "network"}

\item{method}{Character. Similarity metrics
\itemize{
  \item{Matches:}{ Conting number of fragment or neutral loss matches}
  \item{Dot:}{ Dot similarity score based on intensity vectors of fragments.}
  \item{Cosine:}{ COsine similarity score based on intensity vectors of fragments.}
  \item{Spearman:}{ Spearman similarity based on intensity ranks of fragments.}
  \item{MassBank:}{Similarity score used by MassBank using weighted pearson score}
  \item{NIST:}{Similarity score used by NIST using weighted pearson score}
  
}}

\item{frag_mz_search}{Numeric. Absolute mass tolerance in Da for MS/MS peak matching.}

\item{min_frag_match}{Integer. Minimum matched peaks (or corresponding neutral losses) to make a match}

\item{prec_mz_search}{Numeric. Absolute mass tolerance in Da for precursor mass search.}
}
\value{
A list of library items (ID and formula) ranked by the spectral similarity score with query spectrum.
}
\description{
The function calculates spectral similarity of a query spectrum to an existing spectral library
}
\examples{

# Load database to object lib4:
data(DRUG_POS)

# Load query spectra
query_file <- list.files(system.file("spectra", package = "MergeION"),".msp", full.names = TRUE)[1]
query_precursor = library_reader(query_file)$metadata$PEPMASS[1]
query_spectrum = library_reader(query_file)$sp[[1]]

# Search in the spectra library without using precursor mass pre-search
scores = library_similarity(query_spectrum, polarity = "Positive", prec_mz = query_precursor, use.prec = FALSE, input_library = DRUG_POS,
                         method = "Matches", prec_ppm_search = 10, frag_mz_search = 0.01, min_frag_match = 5)

# Visualize the top candidate
library_visualizer(lib4, id = scores$ID[1], query_spectrum) 

}
\author{
Youzhong Liu, \email{Youzhong.Liu@uantwerpen.be}
}
